package com.example.administrator.daiylywriting.BooksSqilte;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;



// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table DRAFT_BOX.
*/
public class DraftBoxDao extends AbstractDao<DraftBox, Void> {

    public static final String TABLENAME = "DRAFT_BOX";

    /**
     * Properties of entity DraftBox.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property DraftVaule = new Property(0, String.class, "DraftVaule", false, "DRAFT_VAULE");
    };


    public DraftBoxDao(DaoConfig config) {
        super(config);
    }
    
    public DraftBoxDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'DRAFT_BOX' (" + //
                "'DRAFT_VAULE' TEXT);"); // 0: DraftVaule
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'DRAFT_BOX'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, DraftBox entity) {
        stmt.clearBindings();
 
        String DraftVaule = entity.getDraftVaule();
        if (DraftVaule != null) {
            stmt.bindString(1, DraftVaule);
        }
    }

    /** @inheritdoc */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    /** @inheritdoc */
    @Override
    public DraftBox readEntity(Cursor cursor, int offset) {
        DraftBox entity = new DraftBox( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0) // DraftVaule
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, DraftBox entity, int offset) {
        entity.setDraftVaule(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
     }
    
    /** @inheritdoc */
    @Override
    protected Void updateKeyAfterInsert(DraftBox entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    /** @inheritdoc */
    @Override
    public Void getKey(DraftBox entity) {
        return null;
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
